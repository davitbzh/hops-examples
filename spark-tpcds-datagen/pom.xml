<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

<!--  <parent>-->
<!--    <groupId>org.apache</groupId>-->
<!--    <artifactId>apache</artifactId>-->
<!--    <version>14</version>-->
<!--  </parent>-->
  
<!--  <groupId>org.apache.spark</groupId>-->
<!--  <artifactId>spark-tpcds-datagen_2.11</artifactId>-->
<!--  <version>0.1.0-SNAPSHOT</version>-->
<!--  <packaging>jar</packaging>-->
<!--  <name>TPCDS Data Generator for Apache Spark</name>-->

<!--  <properties>-->
<!--    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
<!--    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>-->
<!--    <java.version>1.7</java.version>-->
<!--    <maven.version>3.3.9</maven.version>-->
<!--    <scala.version>2.11.8</scala.version>-->
<!--    <scala.base>2.11</scala.base>-->
<!--    <spark.version>2.1.1</spark.version>-->
<!--    <hadoop.version>2.7.3</hadoop.version>-->
<!--    <hadoop.binary.version>2.7</hadoop.binary.version>-->
<!--    <snappy-java.version>1.1.4</snappy-java.version>-->

<!--    <test.java.home>${java.home}</test.java.home>-->
<!--    <test.exclude.tags></test.exclude.tags>-->

<!--    <PermGen>64m</PermGen>-->
<!--    <MaxPermGen>512m</MaxPermGen>-->
<!--    <CodeCacheSize>512m</CodeCacheSize>-->
<!--  </properties>-->

  <parent>
    <groupId>io.hops</groupId>
    <artifactId>hops-examples</artifactId>
    <version>1.3.0-SNAPSHOT</version>
  </parent>

  <artifactId>spark-tpcds-datagen</artifactId>
  <packaging>jar</packaging>
  <name>spark-tpcds-datagen</name>
  
  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.base}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.twitter/util-jvm -->
    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>util-jvm_${scala.base}</artifactId>
      <version>6.23.0</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.apache.hudi/hudi-spark-bundle -->
    <dependency>
      <groupId>org.apache.hudi</groupId>
      <artifactId>hudi-spark-bundle_${scala.base}</artifactId>
      <version>0.5.1-incubating</version>
      <scope>provided</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.rogach/scallop -->
    <dependency>
      <groupId>org.rogach</groupId>
      <artifactId>scallop_2.11</artifactId>
      <version>3.4.0</version>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.xerial.snappy</groupId>-->
<!--      <artifactId>snappy-java</artifactId>-->
<!--      <version>${snappy-java.version}</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.scala-lang</groupId>-->
<!--      <artifactId>scala-library</artifactId>-->
<!--      <version>${scala.version}</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.scalatest</groupId>-->
<!--      <artifactId>scalatest_${scala.base}</artifactId>-->
<!--      <version>2.2.4</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->

<!--    <dependency>-->
<!--      <groupId>org.apache.spark</groupId>-->
<!--      <artifactId>spark-core_${scala.base}</artifactId>-->
<!--      <version>${spark.version}</version>-->
<!--      <type>test-jar</type>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.apache.spark</groupId>-->
<!--      <artifactId>spark-sql_${scala.base}</artifactId>-->
<!--      <version>${spark.version}</version>-->
<!--      <type>test-jar</type>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/scala</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/scala</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <goals>
              <!-- Need to specify this explicitly, otherwise plugin won't be called when doing e.g. mvn compile -->
              <goal>compile</goal>
<!--              <goal>testCompile</goal>-->
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

<!--    &lt;!&ndash; custom resource folders &ndash;&gt;-->
<!--    <resources>-->
<!--      <resource>-->
<!--        <directory>${basedir}/src/main/resources/tpcds</directory>-->
<!--      </resource>-->
<!--    </resources>-->

  </build>

<!--  <build>-->
<!--    <directory>target</directory>-->
<!--    <outputDirectory>target/scala-${scala.base}/classes</outputDirectory>-->
<!--    <finalName>${project.artifactId}-${project.version}</finalName>-->
<!--    <testOutputDirectory>target/scala-${scala.base}/test-classes</testOutputDirectory>-->
<!--    <plugins>-->
<!--      <plugin>-->
<!--        <groupId>org.scalastyle</groupId>-->
<!--        <artifactId>scalastyle-maven-plugin</artifactId>-->
<!--        <version>0.8.0</version>-->
<!--        <configuration>-->
<!--          <verbose>false</verbose>-->
<!--          <failOnViolation>true</failOnViolation>-->
<!--          <includeTestSourceDirectory>true</includeTestSourceDirectory>-->
<!--          <failOnWarning>false</failOnWarning>-->
<!--          <sourceDirectory>src/main/scala</sourceDirectory>-->
<!--          <testSourceDirectory>src/test/scala</testSourceDirectory>-->
<!--          <configLocation>scalastyle-config.xml</configLocation>-->
<!--          <outputFile>target/scalastyle-output.xml</outputFile>-->
<!--          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>-->
<!--          <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--          <goals>-->
<!--            <goal>check</goal>-->
<!--          </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>net.alchim31.maven</groupId>-->
<!--        <artifactId>scala-maven-plugin</artifactId>-->
<!--        <version>3.2.2</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>eclipse-add-source</id>-->
<!--            <goals>-->
<!--              <goal>add-source</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>scala-compile-first</id>-->
<!--            <phase>process-resources</phase>-->
<!--            <goals>-->
<!--              <goal>compile</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>scala-test-compile-first</id>-->
<!--            <phase>process-test-resources</phase>-->
<!--            <goals>-->
<!--              <goal>testCompile</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>attach-scaladocs</id>-->
<!--            <phase>verify</phase>-->
<!--            <goals>-->
<!--              <goal>doc-jar</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--        <configuration>-->
<!--          <scalaVersion>${scala.version}</scalaVersion>-->
<!--          <recompileMode>incremental</recompileMode>-->
<!--          <useZincServer>true</useZincServer>-->
<!--          <args>-->
<!--            <arg>-unchecked</arg>-->
<!--            <arg>-deprecation</arg>-->
<!--            <arg>-feature</arg>-->
<!--          </args>-->
<!--          <jvmArgs>-->
<!--            <jvmArg>-Xms1024m</jvmArg>-->
<!--            <jvmArg>-Xmx1024m</jvmArg>-->
<!--            <jvmArg>-XX:PermSize=${PermGen}</jvmArg>-->
<!--            <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>-->
<!--            <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>-->
<!--          </jvmArgs>-->
<!--          <javacArgs>-->
<!--            <javacArg>-source</javacArg>-->
<!--            <javacArg>${java.version}</javacArg>-->
<!--            <javacArg>-target</javacArg>-->
<!--            <javacArg>${java.version}</javacArg>-->
<!--            <javacArg>-Xlint:all,-serial,-path</javacArg>-->
<!--          </javacArgs>-->
<!--        </configuration>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-compiler-plugin</artifactId>-->
<!--        <version>3.5.1</version>-->
<!--        <configuration>-->
<!--          <source>${java.version}</source>-->
<!--          <target>${java.version}</target>-->
<!--          <encoding>UTF-8</encoding>-->
<!--          <maxmem>1024m</maxmem>-->
<!--          <fork>true</fork>-->
<!--          <compilerArgs>-->
<!--            <arg>-Xlint:all,-serial,-path</arg>-->
<!--          </compilerArgs>-->
<!--        </configuration>-->
<!--      </plugin>-->
<!--      &lt;!&ndash; Surefire runs all Java tests &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-surefire-plugin</artifactId>-->
<!--        <version>2.19.1</version>-->
<!--        &lt;!&ndash; Note config is repeated in scalatest config &ndash;&gt;-->
<!--        <configuration>-->
<!--          <includes>-->
<!--            <include>**/Test*.java</include>-->
<!--            <include>**/*Test.java</include>-->
<!--            <include>**/*TestCase.java</include>-->
<!--            <include>**/*Suite.java</include>-->
<!--          </includes>-->
<!--          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>-->
<!--          <argLine>-Xmx3g -Xss4096k -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=512m</argLine>-->
<!--          <environmentVariables>-->
<!--            &lt;!&ndash;-->
<!--              Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes-->
<!--              launched by the tests have access to the correct test-time classpath.-->
<!--            &ndash;&gt;-->
<!--            <SPARK_DIST_CLASSPATH>${test_classpath}</SPARK_DIST_CLASSPATH>-->
<!--            <SPARK_PREPEND_CLASSES>1</SPARK_PREPEND_CLASSES>-->
<!--            <SPARK_SCALA_VERSION>${scala.base}</SPARK_SCALA_VERSION>-->
<!--            <SPARK_TESTING>1</SPARK_TESTING>-->
<!--            <JAVA_HOME>${test.java.home}</JAVA_HOME>-->
<!--          </environmentVariables>-->
<!--          <systemProperties>-->
<!--            <log4j.configuration>file:src/test/resources/log4j.properties</log4j.configuration>-->
<!--            <derby.system.durability>test</derby.system.durability>-->
<!--            <java.awt.headless>true</java.awt.headless>-->
<!--            <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>-->
<!--            <spark.test.home>${spark.test.home}</spark.test.home>-->
<!--            <spark.testing>1</spark.testing>-->
<!--            <spark.master.rest.enabled>false</spark.master.rest.enabled>-->
<!--            <spark.ui.enabled>false</spark.ui.enabled>-->
<!--            <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>-->
<!--            <spark.unsafe.exceptionOnMemoryLeak>true</spark.unsafe.exceptionOnMemoryLeak>-->
<!--            <spark.memory.debugFill>true</spark.memory.debugFill>-->
<!--            &lt;!&ndash; Needed by sql/hive tests. &ndash;&gt;-->
<!--            <test.src.tables>src</test.src.tables>-->
<!--          </systemProperties>-->
<!--          <failIfNoTests>false</failIfNoTests>-->
<!--          <excludedGroups>${test.exclude.tags}</excludedGroups>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>test</id>-->
<!--            <goals>-->
<!--              <goal>test</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      &lt;!&ndash; Scalatest runs all Scala tests &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>org.scalatest</groupId>-->
<!--        <artifactId>scalatest-maven-plugin</artifactId>-->
<!--        <version>1.0</version>-->
<!--        &lt;!&ndash; Note config is repeated in surefire config &ndash;&gt;-->
<!--        <configuration>-->
<!--          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>-->
<!--          <junitxml>.</junitxml>-->
<!--          <filereports>SparkTestSuite.txt</filereports>-->
<!--          <argLine>-ea -Xmx3g -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=${CodeCacheSize}</argLine>-->
<!--          <stderr/>-->
<!--          <environmentVariables>-->
<!--            &lt;!&ndash;-->
<!--              Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes-->
<!--              launched by the tests have access to the correct test-time classpath.-->
<!--            &ndash;&gt;-->
<!--            <SPARK_DIST_CLASSPATH>${test_classpath}</SPARK_DIST_CLASSPATH>-->
<!--            <SPARK_PREPEND_CLASSES>1</SPARK_PREPEND_CLASSES>-->
<!--            <SPARK_SCALA_VERSION>${scala.base}</SPARK_SCALA_VERSION>-->
<!--            <SPARK_TESTING>1</SPARK_TESTING>-->
<!--            <JAVA_HOME>${test.java.home}</JAVA_HOME>-->
<!--          </environmentVariables>-->
<!--          <systemProperties>-->
<!--            <log4j.configuration>file:src/test/resources/log4j.properties</log4j.configuration>-->
<!--            <derby.system.durability>test</derby.system.durability>-->
<!--            <java.awt.headless>true</java.awt.headless>-->
<!--            <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>-->
<!--            <spark.test.home>${spark.test.home}</spark.test.home>-->
<!--            <spark.testing>1</spark.testing>-->
<!--            <spark.ui.enabled>false</spark.ui.enabled>-->
<!--            <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>-->
<!--            <spark.unsafe.exceptionOnMemoryLeak>true</spark.unsafe.exceptionOnMemoryLeak>-->
<!--            &lt;!&ndash; Needed by sql/hive tests. &ndash;&gt;-->
<!--            <test.src.tables>__not_used__</test.src.tables>-->
<!--          </systemProperties>-->
<!--          <tagsToExclude>${test.exclude.tags}</tagsToExclude>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>test</id>-->
<!--            <goals>-->
<!--              <goal>test</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-jar-plugin</artifactId>-->
<!--        <version>2.5</version>-->
<!--        <configuration>-->
<!--          <finalName>${project.artifactId}-${project.version}</finalName>-->
<!--          <outputDirectory>${project.parent.build.directory}</outputDirectory>-->
<!--        </configuration>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-shade-plugin</artifactId>-->
<!--        <version>2.3</version>-->
<!--          <executions>-->
<!--            <execution>-->
<!--            <id>jar-with-dependencies</id>-->
<!--            <phase>package</phase>-->
<!--            <goals>-->
<!--              <goal>shade</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <finalName>${project.artifactId}-${project.version}-with-dependencies</finalName>-->
<!--              <outputDirectory>${project.parent.build.directory}</outputDirectory>-->
<!--              <minimizeJar>false</minimizeJar>-->
<!--              <createDependencyReducedPom>false</createDependencyReducedPom>-->
<!--              <artifactSet>-->
<!--                <includes></includes>-->
<!--              </artifactSet>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--    </plugins>-->
<!--  </build>-->

</project>

